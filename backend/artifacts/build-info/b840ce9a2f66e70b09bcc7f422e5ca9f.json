{"id":"b840ce9a2f66e70b09bcc7f422e5ca9f","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"contracts/Staking.sol":{"content":"// //SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.0;\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\nerror Transfer_Failed();\r\nerror NeedsMoreThanZero();\r\n\r\ncontract Staking is ReentrancyGuard{\r\n    // @dev State Variables\r\n    IERC20 immutable public StakingToken;\r\n    IERC20 immutable public RewardToken;\r\n    address public s_owner;\r\n    uint256 private constant s_rewardRate = 100;\r\n    uint256 private lastUpdatedtime;\r\n    uint256 public s_totalSupply;\r\n    uint256 public s_rewardPerTokenStored;\r\n    mapping (address => uint256) public s_balances;\r\n    mapping (address => uint256) public s_rewards;\r\n    mapping (address => uint256) public s_userRewardPerToken;\r\n\r\n    // @dev Events\r\n    event StakingEvent(uint256 _amount, address indexed user);\r\n    event WithdrawEvent(uint256 _amount, address indexed user);\r\n    event ClaimEvent(uint256 amount, address indexed user);\r\n\r\n    constructor(address _stakingaddress, address _rewardaddress){\r\n        StakingToken = IERC20(_stakingaddress);\r\n        RewardToken = IERC20(_rewardaddress);\r\n        s_owner = msg.sender;\r\n    }\r\n\r\n    //  @dev modifier\r\n    modifier UpdateReward(address account) {\r\n        s_rewardPerTokenStored = rewardPerToken();\r\n        lastUpdatedtime = block.timestamp;\r\n        s_rewards[account] = earned(account);\r\n        s_userRewardPerToken[account] = s_rewardPerTokenStored;\r\n        _;\r\n    }\r\n\r\n      modifier moreThanZero(uint256 _amount) {\r\n        if (_amount == 0) {\r\n\r\n            revert NeedsMoreThanZero();\r\n        }\r\n        _;\r\n      }\r\n\r\n    // @dev Functions\r\n    function rewardPerToken() public view returns (uint256){\r\n        if(s_totalSupply == 0){\r\n            return s_rewardPerTokenStored;\r\n        }\r\n        return s_rewardPerTokenStored + ((( block.timestamp - lastUpdatedtime) * s_rewardRate * 1e18 ) / s_totalSupply);\r\n    }\r\n\r\n    function earned(address account) public view returns (uint256){\r\n        uint256 userBalance = s_balances[account];\r\n        uint256 rewardToken = rewardPerToken();\r\n        uint256 userRewardPerTokenPaid = s_userRewardPerToken[account];\r\n        uint256 rewards =  s_rewards[account];\r\n\r\n        return ((userBalance * (rewardToken - userRewardPerTokenPaid))/ 1e18) + rewards;\r\n\r\n    }\r\n\r\n\r\n    // @dev Stake Function\r\n    // Function shoud be able to add to total supply\r\n    // Add to the user balance\r\n    // transfer to the contract\r\n    // Emit the amount staked and the address\r\n//  UpdateReward(msg.sender)\r\n    function Stake(uint256 _amount) external UpdateReward(msg.sender) nonReentrant moreThanZero(_amount){\r\n       \r\n        s_totalSupply += _amount;\r\n        s_balances[msg.sender] += _amount;\r\n        emit StakingEvent(_amount, msg.sender);\r\n        bool success = StakingToken.transferFrom(msg.sender, address(this), _amount);\r\n        \r\n        if(!success){\r\n            revert Transfer_Failed();\r\n        }\r\n\r\n    }\r\n\r\n    // @dev Withdraw Function\r\n    // Function should be able to minus from the total supply\r\n    // Minus from the user balance\r\n    // transfer to the user\r\n    // Emit the amount withdrawed and the address\r\n\r\n    function Withdraw(uint _amount) external nonReentrant UpdateReward(msg.sender){\r\n        if(_amount < s_balances[msg.sender]){\r\n            revert Transfer_Failed();\r\n        }\r\n        s_totalSupply -= _amount;\r\n        s_balances[msg.sender] -= _amount;\r\n        bool success = StakingToken.transfer(msg.sender, _amount);\r\n        \r\n        if(!success){\r\n            revert Transfer_Failed();\r\n        }\r\n\r\n        emit WithdrawEvent(_amount, msg.sender);\r\n    }\r\n\r\n\r\n    // @dev Claim Function\r\n    // user reward will go to zero\r\n    // transfer the reward to the user\r\n    // Emit the amount token and the address\r\n\r\n    function Claim() external nonReentrant UpdateReward(msg.sender) {\r\n        uint256 amount = s_rewards[msg.sender];\r\n        s_rewards[msg.sender] = 0;\r\n        bool success = RewardToken.transferFrom(address(this), msg.sender, amount);\r\n        \r\n        if(!success){\r\n            revert Transfer_Failed();\r\n        }\r\n\r\n        emit ClaimEvent(amount, msg.sender);\r\n        \r\n    }\r\n}"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[53]},"id":54,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:0"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"137:750:0","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":53,"linearizedBaseContracts":[53],"name":"ReentrancyGuard","nameLocation":"906:15:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:0","nodeType":"VariableDeclaration","scope":53,"src":"1676:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":8,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:0","nodeType":"VariableDeclaration","scope":53,"src":"1723:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":10,"mutability":"mutable","name":"_status","nameLocation":"1783:7:0","nodeType":"VariableDeclaration","scope":53,"src":"1767:23:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":17,"nodeType":"Block","src":"1811:39:0","statements":[{"expression":{"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":13,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1821:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":14,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"1831:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16,"nodeType":"ExpressionStatement","src":"1821:22:0"}]},"id":18,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"1808:2:0"},"returnParameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"1811:0:0"},"scope":53,"src":"1797:53:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":28,"nodeType":"Block","src":"2251:79:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":21,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2261:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":22,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":23,"nodeType":"ExpressionStatement","src":"2261:21:0"},{"id":24,"nodeType":"PlaceholderStatement","src":"2292:1:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":25,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"2303:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2303:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":27,"nodeType":"ExpressionStatement","src":"2303:20:0"}]},"documentation":{"id":19,"nodeType":"StructuredDocumentation","src":"1856:366:0","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":29,"name":"nonReentrant","nameLocation":"2236:12:0","nodeType":"ModifierDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[],"src":"2248:2:0"},"src":"2227:103:0","virtual":false,"visibility":"internal"},{"body":{"id":43,"nodeType":"Block","src":"2375:248:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":33,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2468:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":34,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2479:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":36,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":32,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2460:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2460:63:0"},{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2598:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2608:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":42,"nodeType":"ExpressionStatement","src":"2598:18:0"}]},"id":44,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"2364:2:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"2375:0:0"},"scope":53,"src":"2336:287:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":51,"nodeType":"Block","src":"2667:171:0","statements":[{"expression":{"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":47,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2809:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":48,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"2819:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":50,"nodeType":"ExpressionStatement","src":"2809:22:0"}]},"id":52,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"2656:2:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"2667:0:0"},"scope":53,"src":"2629:209:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":54,"src":"888:1952:0","usedErrors":[]}],"src":"112:2729:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[131]},"id":132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":55,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":131,"linearizedBaseContracts":[131],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":57,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":65,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":65,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":61,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":65,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":65,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":66,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":74,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":74,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":70,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":74,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":72,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":74,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":80,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":76,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":131,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":88,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":88,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":88,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":85,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":131,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":89,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":98,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":98,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":98,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":92,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":98,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":95,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":131,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":108,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":108,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":108,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":108,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":131,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":109,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":118,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":118,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":113,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":118,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":112,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":118,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":115,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":131,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":130,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"from","nameLocation":"2685:4:1","nodeType":"VariableDeclaration","scope":130,"src":"2677:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"to","nameLocation":"2707:2:1","nodeType":"VariableDeclaration","scope":130,"src":"2699:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":122,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"amount","nameLocation":"2727:6:1","nodeType":"VariableDeclaration","scope":130,"src":"2719:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":124,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:1"},"returnParameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":130,"src":"2758:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":127,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:1"},"scope":131,"src":"2646:118:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":132,"src":"202:2564:1","usedErrors":[]}],"src":"106:2661:1"},"id":1},"contracts/Staking.sol":{"ast":{"absolutePath":"contracts/Staking.sol","exportedSymbols":{"IERC20":[131],"NeedsMoreThanZero":[139],"ReentrancyGuard":[53],"Staking":[489],"Transfer_Failed":[137]},"id":490,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":133,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"44:23:2"},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":134,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":490,"sourceUnit":54,"src":"69:62:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":135,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":490,"sourceUnit":132,"src":"133:56:2","symbolAliases":[],"unitAlias":""},{"id":137,"name":"Transfer_Failed","nameLocation":"199:15:2","nodeType":"ErrorDefinition","parameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"214:2:2"},"src":"193:24:2"},{"id":139,"name":"NeedsMoreThanZero","nameLocation":"225:17:2","nodeType":"ErrorDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[],"src":"242:2:2"},"src":"219:26:2"},{"abstract":false,"baseContracts":[{"baseName":{"id":140,"name":"ReentrancyGuard","nodeType":"IdentifierPath","referencedDeclaration":53,"src":"269:15:2"},"id":141,"nodeType":"InheritanceSpecifier","src":"269:15:2"}],"canonicalName":"Staking","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":489,"linearizedBaseContracts":[489,53],"name":"Staking","nameLocation":"258:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"be5af966","id":144,"mutability":"immutable","name":"StakingToken","nameLocation":"344:12:2","nodeType":"VariableDeclaration","scope":489,"src":"320:36:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"},"typeName":{"id":143,"nodeType":"UserDefinedTypeName","pathNode":{"id":142,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":131,"src":"320:6:2"},"referencedDeclaration":131,"src":"320:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"f1e9f1e5","id":147,"mutability":"immutable","name":"RewardToken","nameLocation":"387:11:2","nodeType":"VariableDeclaration","scope":489,"src":"363:35:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"},"typeName":{"id":146,"nodeType":"UserDefinedTypeName","pathNode":{"id":145,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":131,"src":"363:6:2"},"referencedDeclaration":131,"src":"363:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"e3978240","id":149,"mutability":"mutable","name":"s_owner","nameLocation":"420:7:2","nodeType":"VariableDeclaration","scope":489,"src":"405:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":148,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"id":152,"mutability":"constant","name":"s_rewardRate","nameLocation":"459:12:2","nodeType":"VariableDeclaration","scope":489,"src":"434:43:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":150,"name":"uint256","nodeType":"ElementaryTypeName","src":"434:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"474:3:2","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"private"},{"constant":false,"id":154,"mutability":"mutable","name":"lastUpdatedtime","nameLocation":"500:15:2","nodeType":"VariableDeclaration","scope":489,"src":"484:31:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"6a74a0fc","id":156,"mutability":"mutable","name":"s_totalSupply","nameLocation":"537:13:2","nodeType":"VariableDeclaration","scope":489,"src":"522:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"522:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"304ac91b","id":158,"mutability":"mutable","name":"s_rewardPerTokenStored","nameLocation":"572:22:2","nodeType":"VariableDeclaration","scope":489,"src":"557:37:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ab32eb69","id":162,"mutability":"mutable","name":"s_balances","nameLocation":"637:10:2","nodeType":"VariableDeclaration","scope":489,"src":"601:46:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":161,"keyType":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"601:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":160,"name":"uint256","nodeType":"ElementaryTypeName","src":"621:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"bea08151","id":166,"mutability":"mutable","name":"s_rewards","nameLocation":"690:9:2","nodeType":"VariableDeclaration","scope":489,"src":"654:45:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":165,"keyType":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"663:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"654:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"674:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"21e82efa","id":170,"mutability":"mutable","name":"s_userRewardPerToken","nameLocation":"742:20:2","nodeType":"VariableDeclaration","scope":489,"src":"706:56:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":169,"keyType":{"id":167,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"706:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":168,"name":"uint256","nodeType":"ElementaryTypeName","src":"726:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"id":176,"name":"StakingEvent","nameLocation":"797:12:2","nodeType":"EventDefinition","parameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"818:7:2","nodeType":"VariableDeclaration","scope":176,"src":"810:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"810:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":174,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"843:4:2","nodeType":"VariableDeclaration","scope":176,"src":"827:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"827:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"809:39:2"},"src":"791:58:2"},{"anonymous":false,"id":182,"name":"WithdrawEvent","nameLocation":"861:13:2","nodeType":"EventDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"883:7:2","nodeType":"VariableDeclaration","scope":182,"src":"875:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"875:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":180,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"908:4:2","nodeType":"VariableDeclaration","scope":182,"src":"892:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"892:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"874:39:2"},"src":"855:59:2"},{"anonymous":false,"id":188,"name":"ClaimEvent","nameLocation":"926:10:2","nodeType":"EventDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"945:6:2","nodeType":"VariableDeclaration","scope":188,"src":"937:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":186,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"969:4:2","nodeType":"VariableDeclaration","scope":188,"src":"953:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"953:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"936:38:2"},"src":"920:55:2"},{"body":{"id":212,"nodeType":"Block","src":"1043:135:2","statements":[{"expression":{"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":195,"name":"StakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"1054:12:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":197,"name":"_stakingaddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"1076:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":196,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"1069:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$131_$","typeString":"type(contract IERC20)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1069:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"src":"1054:38:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"id":200,"nodeType":"ExpressionStatement","src":"1054:38:2"},{"expression":{"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":201,"name":"RewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"1103:11:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":203,"name":"_rewardaddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"1124:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":202,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"1117:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$131_$","typeString":"type(contract IERC20)"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1117:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"src":"1103:36:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"id":206,"nodeType":"ExpressionStatement","src":"1103:36:2"},{"expression":{"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":207,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"1150:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":208,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1160:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1160:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1150:20:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":211,"nodeType":"ExpressionStatement","src":"1150:20:2"}]},"id":213,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"_stakingaddress","nameLocation":"1003:15:2","nodeType":"VariableDeclaration","scope":213,"src":"995:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"995:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"_rewardaddress","nameLocation":"1028:14:2","nodeType":"VariableDeclaration","scope":213,"src":"1020:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"994:49:2"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"1043:0:2"},"scope":489,"src":"983:195:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":242,"nodeType":"Block","src":"1248:228:2","statements":[{"expression":{"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":217,"name":"s_rewardPerTokenStored","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"1259:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":218,"name":"rewardPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"1284:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1284:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1259:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":221,"nodeType":"ExpressionStatement","src":"1259:41:2"},{"expression":{"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":222,"name":"lastUpdatedtime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"1311:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":223,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1329:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1329:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1311:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":226,"nodeType":"ExpressionStatement","src":"1311:33:2"},{"expression":{"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":227,"name":"s_rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"1355:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":229,"indexExpression":{"id":228,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"1365:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1355:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":231,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"1383:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":230,"name":"earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"1376:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1376:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1355:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":234,"nodeType":"ExpressionStatement","src":"1355:36:2"},{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":235,"name":"s_userRewardPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"1402:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"1423:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1402:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":238,"name":"s_rewardPerTokenStored","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"1434:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1402:54:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":240,"nodeType":"ExpressionStatement","src":"1402:54:2"},{"id":241,"nodeType":"PlaceholderStatement","src":"1467:1:2"}]},"id":243,"name":"UpdateReward","nameLocation":"1218:12:2","nodeType":"ModifierDefinition","parameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"account","nameLocation":"1239:7:2","nodeType":"VariableDeclaration","scope":243,"src":"1231:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"1231:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1230:17:2"},"src":"1209:267:2","virtual":false,"visibility":"internal"},{"body":{"id":256,"nodeType":"Block","src":"1525:105:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":247,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"1540:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1551:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1540:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":254,"nodeType":"IfStatement","src":"1536:73:2","trueBody":{"id":253,"nodeType":"Block","src":"1554:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":250,"name":"NeedsMoreThanZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"1578:17:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1578:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":252,"nodeType":"RevertStatement","src":"1571:26:2"}]}},{"id":255,"nodeType":"PlaceholderStatement","src":"1619:1:2"}]},"id":257,"name":"moreThanZero","nameLocation":"1495:12:2","nodeType":"ModifierDefinition","parameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"_amount","nameLocation":"1516:7:2","nodeType":"VariableDeclaration","scope":257,"src":"1508:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1508:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1507:17:2"},"src":"1486:144:2","virtual":false,"visibility":"internal"},{"body":{"id":285,"nodeType":"Block","src":"1716:218:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":262,"name":"s_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"1730:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1747:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1730:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":268,"nodeType":"IfStatement","src":"1727:78:2","trueBody":{"id":267,"nodeType":"Block","src":"1749:56:2","statements":[{"expression":{"id":265,"name":"s_rewardPerTokenStored","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"1771:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":261,"id":266,"nodeType":"Return","src":"1764:29:2"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":269,"name":"s_rewardPerTokenStored","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"1822:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":270,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1851:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1851:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":272,"name":"lastUpdatedtime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"1869:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1851:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":274,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1849:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":275,"name":"s_rewardRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"1888:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1849:51:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1903:4:2","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"1849:58:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":279,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1848:61:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":280,"name":"s_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"1912:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1848:77:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1847:79:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1822:104:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":261,"id":284,"nodeType":"Return","src":"1815:111:2"}]},"functionSelector":"cd3daf9d","id":286,"implemented":true,"kind":"function","modifiers":[],"name":"rewardPerToken","nameLocation":"1670:14:2","nodeType":"FunctionDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"1684:2:2"},"returnParameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":286,"src":"1708:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1707:9:2"},"scope":489,"src":"1661:273:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":329,"nodeType":"Block","src":"2004:324:2","statements":[{"assignments":[294],"declarations":[{"constant":false,"id":294,"mutability":"mutable","name":"userBalance","nameLocation":"2023:11:2","nodeType":"VariableDeclaration","scope":329,"src":"2015:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"2015:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":298,"initialValue":{"baseExpression":{"id":295,"name":"s_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2037:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":297,"indexExpression":{"id":296,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2048:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2037:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2015:41:2"},{"assignments":[300],"declarations":[{"constant":false,"id":300,"mutability":"mutable","name":"rewardToken","nameLocation":"2075:11:2","nodeType":"VariableDeclaration","scope":329,"src":"2067:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"2067:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":303,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":301,"name":"rewardPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"2089:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2089:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2067:38:2"},{"assignments":[305],"declarations":[{"constant":false,"id":305,"mutability":"mutable","name":"userRewardPerTokenPaid","nameLocation":"2124:22:2","nodeType":"VariableDeclaration","scope":329,"src":"2116:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":304,"name":"uint256","nodeType":"ElementaryTypeName","src":"2116:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":309,"initialValue":{"baseExpression":{"id":306,"name":"s_userRewardPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"2149:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":308,"indexExpression":{"id":307,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2170:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2149:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2116:62:2"},{"assignments":[311],"declarations":[{"constant":false,"id":311,"mutability":"mutable","name":"rewards","nameLocation":"2197:7:2","nodeType":"VariableDeclaration","scope":329,"src":"2189:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":315,"initialValue":{"baseExpression":{"id":312,"name":"s_rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"2208:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":314,"indexExpression":{"id":313,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2218:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2208:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2189:37:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":316,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2248:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":317,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2263:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":318,"name":"userRewardPerTokenPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"2277:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2263:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2262:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2248:52:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2247:54:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2303:4:2","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"2247:60:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2246:62:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":326,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"2311:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2246:72:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":292,"id":328,"nodeType":"Return","src":"2239:79:2"}]},"functionSelector":"008cc262","id":330,"implemented":true,"kind":"function","modifiers":[],"name":"earned","nameLocation":"1951:6:2","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"1966:7:2","nodeType":"VariableDeclaration","scope":330,"src":"1958:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"1958:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1957:17:2"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":330,"src":"1996:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1996:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1995:9:2"},"scope":489,"src":"1942:386:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":381,"nodeType":"Block","src":"2662:317:2","statements":[{"expression":{"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":344,"name":"s_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"2682:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":345,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"2699:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2682:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":347,"nodeType":"ExpressionStatement","src":"2682:24:2"},{"expression":{"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":348,"name":"s_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2717:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":351,"indexExpression":{"expression":{"id":349,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2728:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2728:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2717:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":352,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"2743:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2717:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":354,"nodeType":"ExpressionStatement","src":"2717:33:2"},{"eventCall":{"arguments":[{"id":356,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"2779:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":357,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2788:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2788:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":355,"name":"StakingEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"2766:12:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2766:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":360,"nodeType":"EmitStatement","src":"2761:38:2"},{"assignments":[362],"declarations":[{"constant":false,"id":362,"mutability":"mutable","name":"success","nameLocation":"2815:7:2","nodeType":"VariableDeclaration","scope":381,"src":"2810:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":361,"name":"bool","nodeType":"ElementaryTypeName","src":"2810:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":373,"initialValue":{"arguments":[{"expression":{"id":365,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2851:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2851:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":369,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2871:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Staking_$489","typeString":"contract Staking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Staking_$489","typeString":"contract Staking"}],"id":368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2863:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"2863:7:2","typeDescriptions":{}}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2863:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":371,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"2878:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":363,"name":"StakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"2825:12:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":130,"src":"2825:25:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2825:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2810:76:2"},{"condition":{"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2910:8:2","subExpression":{"id":374,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"2911:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":380,"nodeType":"IfStatement","src":"2907:63:2","trueBody":{"id":379,"nodeType":"Block","src":"2919:51:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":376,"name":"Transfer_Failed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2941:15:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2941:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":378,"nodeType":"RevertStatement","src":"2934:24:2"}]}}]},"functionSelector":"227a473b","id":382,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":335,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2616:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2616:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":337,"kind":"modifierInvocation","modifierName":{"id":334,"name":"UpdateReward","nodeType":"IdentifierPath","referencedDeclaration":243,"src":"2603:12:2"},"nodeType":"ModifierInvocation","src":"2603:24:2"},{"id":339,"kind":"modifierInvocation","modifierName":{"id":338,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":29,"src":"2628:12:2"},"nodeType":"ModifierInvocation","src":"2628:12:2"},{"arguments":[{"id":341,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"2654:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":342,"kind":"modifierInvocation","modifierName":{"id":340,"name":"moreThanZero","nodeType":"IdentifierPath","referencedDeclaration":257,"src":"2641:12:2"},"nodeType":"ModifierInvocation","src":"2641:21:2"}],"name":"Stake","nameLocation":"2571:5:2","nodeType":"FunctionDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"_amount","nameLocation":"2585:7:2","nodeType":"VariableDeclaration","scope":382,"src":"2577:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"2577:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2576:17:2"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"2662:0:2"},"scope":489,"src":"2562:417:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":437,"nodeType":"Block","src":"3277:387:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"3291:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"id":394,"name":"s_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"3301:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":397,"indexExpression":{"expression":{"id":395,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3312:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3312:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3301:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3291:32:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":403,"nodeType":"IfStatement","src":"3288:87:2","trueBody":{"id":402,"nodeType":"Block","src":"3324:51:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":399,"name":"Transfer_Failed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"3346:15:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3346:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"RevertStatement","src":"3339:24:2"}]}},{"expression":{"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":404,"name":"s_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"3385:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":405,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"3402:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3385:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":407,"nodeType":"ExpressionStatement","src":"3385:24:2"},{"expression":{"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":408,"name":"s_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"3420:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":411,"indexExpression":{"expression":{"id":409,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3431:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3431:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3420:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":412,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"3446:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3420:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":414,"nodeType":"ExpressionStatement","src":"3420:33:2"},{"assignments":[416],"declarations":[{"constant":false,"id":416,"mutability":"mutable","name":"success","nameLocation":"3469:7:2","nodeType":"VariableDeclaration","scope":437,"src":"3464:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":415,"name":"bool","nodeType":"ElementaryTypeName","src":"3464:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":423,"initialValue":{"arguments":[{"expression":{"id":419,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3501:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3501:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":421,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"3513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":417,"name":"StakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"3479:12:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":98,"src":"3479:21:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3479:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3464:57:2"},{"condition":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3545:8:2","subExpression":{"id":424,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"3546:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":430,"nodeType":"IfStatement","src":"3542:63:2","trueBody":{"id":429,"nodeType":"Block","src":"3554:51:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":426,"name":"Transfer_Failed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"3576:15:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3576:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"RevertStatement","src":"3569:24:2"}]}},{"eventCall":{"arguments":[{"id":432,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"3636:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":433,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3645:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3645:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":431,"name":"WithdrawEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"3622:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3622:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"EmitStatement","src":"3617:39:2"}]},"functionSelector":"5b6b431d","id":438,"implemented":true,"kind":"function","modifiers":[{"id":387,"kind":"modifierInvocation","modifierName":{"id":386,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":29,"src":"3240:12:2"},"nodeType":"ModifierInvocation","src":"3240:12:2"},{"arguments":[{"expression":{"id":389,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3266:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3266:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":391,"kind":"modifierInvocation","modifierName":{"id":388,"name":"UpdateReward","nodeType":"IdentifierPath","referencedDeclaration":243,"src":"3253:12:2"},"nodeType":"ModifierInvocation","src":"3253:24:2"}],"name":"Withdraw","nameLocation":"3208:8:2","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"_amount","nameLocation":"3222:7:2","nodeType":"VariableDeclaration","scope":438,"src":"3217:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":383,"name":"uint","nodeType":"ElementaryTypeName","src":"3217:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3216:14:2"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[],"src":"3277:0:2"},"scope":489,"src":"3199:465:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":487,"nodeType":"Block","src":"3890:319:2","statements":[{"assignments":[448],"declarations":[{"constant":false,"id":448,"mutability":"mutable","name":"amount","nameLocation":"3909:6:2","nodeType":"VariableDeclaration","scope":487,"src":"3901:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"3901:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":453,"initialValue":{"baseExpression":{"id":449,"name":"s_rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"3918:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":452,"indexExpression":{"expression":{"id":450,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3928:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3928:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3918:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3901:38:2"},{"expression":{"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":454,"name":"s_rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"3950:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":457,"indexExpression":{"expression":{"id":455,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3960:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3960:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3950:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3974:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3950:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":460,"nodeType":"ExpressionStatement","src":"3950:25:2"},{"assignments":[462],"declarations":[{"constant":false,"id":462,"mutability":"mutable","name":"success","nameLocation":"3991:7:2","nodeType":"VariableDeclaration","scope":487,"src":"3986:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":461,"name":"bool","nodeType":"ElementaryTypeName","src":"3986:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":473,"initialValue":{"arguments":[{"arguments":[{"id":467,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4034:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Staking_$489","typeString":"contract Staking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Staking_$489","typeString":"contract Staking"}],"id":466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4026:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"4026:7:2","typeDescriptions":{}}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4026:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":469,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4041:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4041:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":471,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"4053:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":463,"name":"RewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"4001:11:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":130,"src":"4001:24:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4001:59:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3986:74:2"},{"condition":{"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4084:8:2","subExpression":{"id":474,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4085:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":480,"nodeType":"IfStatement","src":"4081:63:2","trueBody":{"id":479,"nodeType":"Block","src":"4093:51:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":476,"name":"Transfer_Failed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"4115:15:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4115:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"RevertStatement","src":"4108:24:2"}]}},{"eventCall":{"arguments":[{"id":482,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"4172:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":483,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4180:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4180:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":481,"name":"ClaimEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"4161:10:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4161:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":486,"nodeType":"EmitStatement","src":"4156:35:2"}]},"functionSelector":"3158952e","id":488,"implemented":true,"kind":"function","modifiers":[{"id":441,"kind":"modifierInvocation","modifierName":{"id":440,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":29,"src":"3852:12:2"},"nodeType":"ModifierInvocation","src":"3852:12:2"},{"arguments":[{"expression":{"id":443,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3878:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3878:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":445,"kind":"modifierInvocation","modifierName":{"id":442,"name":"UpdateReward","nodeType":"IdentifierPath","referencedDeclaration":243,"src":"3865:12:2"},"nodeType":"ModifierInvocation","src":"3865:24:2"}],"name":"Claim","nameLocation":"3835:5:2","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[],"src":"3840:2:2"},"returnParameters":{"id":446,"nodeType":"ParameterList","parameters":[],"src":"3890:0:2"},"scope":489,"src":"3826:383:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":490,"src":"249:3963:2","usedErrors":[137,139]}],"src":"44:4168:2"},"id":2}},"contracts":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":10,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Staking.sol":{"Staking":{"abi":[{"inputs":[{"internalType":"address","name":"_stakingaddress","type":"address"},{"internalType":"address","name":"_rewardaddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"NeedsMoreThanZero","type":"error"},{"inputs":[],"name":"Transfer_Failed","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ClaimEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"StakingEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"WithdrawEvent","type":"event"},{"inputs":[],"name":"Claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"RewardToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"Stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"StakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"Withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"earned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"s_balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_rewardPerTokenStored","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"s_rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"s_userRewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_18":{"entryPoint":null,"id":18,"parameterSlots":0,"returnSlots":0},"@_213":{"entryPoint":null,"id":213,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":323,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":346,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":277,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":245,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":240,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":297,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1355:3","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:3","statements":[{"nodeType":"YulAssignment","src":"57:19:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:3","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:3"},"nodeType":"YulFunctionCall","src":"67:9:3"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:3"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:3","type":""}],"src":"7:75:3"},{"body":{"nodeType":"YulBlock","src":"177:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:3"},"nodeType":"YulFunctionCall","src":"187:12:3"},"nodeType":"YulExpressionStatement","src":"187:12:3"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:3"},{"body":{"nodeType":"YulBlock","src":"300:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:3"},"nodeType":"YulFunctionCall","src":"310:12:3"},"nodeType":"YulExpressionStatement","src":"310:12:3"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:3"},{"body":{"nodeType":"YulBlock","src":"379:81:3","statements":[{"nodeType":"YulAssignment","src":"389:65:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:3"},"nodeType":"YulFunctionCall","src":"400:54:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:3"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:3","type":""}],"src":"334:126:3"},{"body":{"nodeType":"YulBlock","src":"511:51:3","statements":[{"nodeType":"YulAssignment","src":"521:35:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:3"},"nodeType":"YulFunctionCall","src":"532:24:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:3"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:3","type":""}],"src":"466:96:3"},{"body":{"nodeType":"YulBlock","src":"611:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:3"},"nodeType":"YulFunctionCall","src":"670:12:3"},"nodeType":"YulExpressionStatement","src":"670:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:3"},"nodeType":"YulFunctionCall","src":"641:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:3"},"nodeType":"YulFunctionCall","src":"631:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:3"},"nodeType":"YulFunctionCall","src":"624:43:3"},"nodeType":"YulIf","src":"621:63:3"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:3","type":""}],"src":"568:122:3"},{"body":{"nodeType":"YulBlock","src":"759:80:3","statements":[{"nodeType":"YulAssignment","src":"769:22:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:3"},"nodeType":"YulFunctionCall","src":"778:13:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:3"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:3"},"nodeType":"YulFunctionCall","src":"800:33:3"},"nodeType":"YulExpressionStatement","src":"800:33:3"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:3","type":""}],"src":"696:143:3"},{"body":{"nodeType":"YulBlock","src":"939:413:3","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:3"},"nodeType":"YulFunctionCall","src":"987:79:3"},"nodeType":"YulExpressionStatement","src":"987:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:3"},"nodeType":"YulFunctionCall","src":"956:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:3"},"nodeType":"YulFunctionCall","src":"952:32:3"},"nodeType":"YulIf","src":"949:119:3"},{"nodeType":"YulBlock","src":"1078:128:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:3"},"nodeType":"YulFunctionCall","src":"1164:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:3"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:3"},"nodeType":"YulFunctionCall","src":"1132:64:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:3"}]}]},{"nodeType":"YulBlock","src":"1216:129:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:3","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:3"},"nodeType":"YulFunctionCall","src":"1303:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:3"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:3"},"nodeType":"YulFunctionCall","src":"1271:64:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:3"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:3","type":""}],"src":"845:507:3"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":3,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040523480156200001157600080fd5b50604051620013a3380380620013a383398181016040528101906200003791906200015a565b60016000819055508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001a1565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200012282620000f5565b9050919050565b620001348162000115565b81146200014057600080fd5b50565b600081519050620001548162000129565b92915050565b60008060408385031215620001745762000173620000f0565b5b6000620001848582860162000143565b9250506020620001978582860162000143565b9150509250929050565b60805160a0516111c7620001dc6000396000818161079e0152610c9f01526000818161056701528181610a7b0152610bda01526111c76000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80636a74a0fc1161008c578063bea0815111610066578063bea08151146101ff578063cd3daf9d1461022f578063e39782401461024d578063f1e9f1e51461026b576100ce565b80636a74a0fc14610193578063ab32eb69146101b1578063be5af966146101e1576100ce565b80628cc262146100d357806321e82efa14610103578063227a473b14610133578063304ac91b1461014f5780633158952e1461016d5780635b6b431d14610177575b600080fd5b6100ed60048036038101906100e89190610d7e565b610289565b6040516100fa9190610dc4565b60405180910390f35b61011d60048036038101906101189190610d7e565b6103a2565b60405161012a9190610dc4565b60405180910390f35b61014d60048036038101906101489190610e0b565b6103ba565b005b61015761065b565b6040516101649190610dc4565b60405180910390f35b610175610661565b005b610191600480360381019061018c9190610e0b565b6108df565b005b61019b610bba565b6040516101a89190610dc4565b60405180910390f35b6101cb60048036038101906101c69190610d7e565b610bc0565b6040516101d89190610dc4565b60405180910390f35b6101e9610bd8565b6040516101f69190610e97565b60405180910390f35b61021960048036038101906102149190610d7e565b610bfc565b6040516102269190610dc4565b60405180910390f35b610237610c14565b6040516102449190610dc4565b60405180910390f35b610255610c77565b6040516102629190610ec1565b60405180910390f35b610273610c9d565b6040516102809190610e97565b60405180910390f35b600080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006102d8610c14565b90506000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080670de0b6b3a764000083856103789190610f0b565b866103839190610f3f565b61038d9190610fc8565b6103979190610ff9565b945050505050919050565b60076020528060005260406000206000915090505481565b336103c3610c14565b600481905550426002819055506103d981610289565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061046a610cc1565b8160008114156104a6576040517ff45911f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600360008282546104b89190610ff9565b9250508190555082600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461050e9190610ff9565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9eddc895a7fcc0f3c43a5ec13c076918147735dc833efd2b36be61b49960ae288460405161055b9190610dc4565b60405180910390a260007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016105c29392919061104f565b602060405180830381600087803b1580156105dc57600080fd5b505af11580156105f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061491906110be565b90508061064d576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050610657610d11565b5050565b60045481565b610669610cc1565b33610672610c14565b6004819055504260028190555061068881610289565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3033856040518463ffffffff1660e01b81526004016107f99392919061104f565b602060405180830381600087803b15801561081357600080fd5b505af1158015610827573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084b91906110be565b905080610884576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8ef124458f6feaffa36635fcaa512e69bb8539878544e2fad3115da59145b4fc836040516108ca9190610dc4565b60405180910390a25050506108dd610d11565b565b6108e7610cc1565b336108f0610c14565b6004819055504260028190555061090681610289565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821015610a08576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160036000828254610a1a9190610f0b565b9250508190555081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a709190610f0b565b9250508190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610ad49291906110eb565b602060405180830381600087803b158015610aee57600080fd5b505af1158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2691906110be565b905080610b5f576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f601cfd9096521c3ad4102493abe73cd7278ce7b82d41f1d65e1c25c1fb56197884604051610ba59190610dc4565b60405180910390a25050610bb7610d11565b50565b60035481565b60056020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60066020528060005260406000206000915090505481565b6000806003541415610c2a576004549050610c74565b600354670de0b6b3a7640000606460025442610c469190610f0b565b610c509190610f3f565b610c5a9190610f3f565b610c649190610fc8565b600454610c719190610ff9565b90505b90565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60026000541415610d07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfe90611171565b60405180910390fd5b6002600081905550565b6001600081905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d4b82610d20565b9050919050565b610d5b81610d40565b8114610d6657600080fd5b50565b600081359050610d7881610d52565b92915050565b600060208284031215610d9457610d93610d1b565b5b6000610da284828501610d69565b91505092915050565b6000819050919050565b610dbe81610dab565b82525050565b6000602082019050610dd96000830184610db5565b92915050565b610de881610dab565b8114610df357600080fd5b50565b600081359050610e0581610ddf565b92915050565b600060208284031215610e2157610e20610d1b565b5b6000610e2f84828501610df6565b91505092915050565b6000819050919050565b6000610e5d610e58610e5384610d20565b610e38565b610d20565b9050919050565b6000610e6f82610e42565b9050919050565b6000610e8182610e64565b9050919050565b610e9181610e76565b82525050565b6000602082019050610eac6000830184610e88565b92915050565b610ebb81610d40565b82525050565b6000602082019050610ed66000830184610eb2565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f1682610dab565b9150610f2183610dab565b925082821015610f3457610f33610edc565b5b828203905092915050565b6000610f4a82610dab565b9150610f5583610dab565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f8e57610f8d610edc565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fd382610dab565b9150610fde83610dab565b925082610fee57610fed610f99565b5b828204905092915050565b600061100482610dab565b915061100f83610dab565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561104457611043610edc565b5b828201905092915050565b60006060820190506110646000830186610eb2565b6110716020830185610eb2565b61107e6040830184610db5565b949350505050565b60008115159050919050565b61109b81611086565b81146110a657600080fd5b50565b6000815190506110b881611092565b92915050565b6000602082840312156110d4576110d3610d1b565b5b60006110e2848285016110a9565b91505092915050565b60006040820190506111006000830185610eb2565b61110d6020830184610db5565b9392505050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061115b601f83611114565b915061116682611125565b602082019050919050565b6000602082019050818103600083015261118a8161114e565b905091905056fea264697066735822122086a42b8c0783d7dc7deed15161a350551b15bac8e44a5006738bbadc3c9a158964736f6c63430008090033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13A3 CODESIZE SUB DUP1 PUSH3 0x13A3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x15A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x1A1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x122 DUP3 PUSH3 0xF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x134 DUP2 PUSH3 0x115 JUMP JUMPDEST DUP2 EQ PUSH3 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x154 DUP2 PUSH3 0x129 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x174 JUMPI PUSH3 0x173 PUSH3 0xF0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x184 DUP6 DUP3 DUP7 ADD PUSH3 0x143 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x197 DUP6 DUP3 DUP7 ADD PUSH3 0x143 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x11C7 PUSH3 0x1DC PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x79E ADD MSTORE PUSH2 0xC9F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x567 ADD MSTORE DUP2 DUP2 PUSH2 0xA7B ADD MSTORE PUSH2 0xBDA ADD MSTORE PUSH2 0x11C7 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A74A0FC GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBEA08151 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBEA08151 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xE3978240 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF1E9F1E5 EQ PUSH2 0x26B JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x6A74A0FC EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xAB32EB69 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xBE5AF966 EQ PUSH2 0x1E1 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x21E82EFA EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x227A473B EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x304AC91B EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x3158952E EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x5B6B431D EQ PUSH2 0x177 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x157 PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x661 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x2D8 PUSH2 0xC14 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 DUP6 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST DUP7 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0xF3F JUMP JUMPDEST PUSH2 0x38D SWAP2 SWAP1 PUSH2 0xFC8 JUMP JUMPDEST PUSH2 0x397 SWAP2 SWAP1 PUSH2 0xFF9 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0x3C3 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x3D9 DUP2 PUSH2 0x289 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x46A PUSH2 0xCC1 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF45911F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0xFF9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x50E SWAP2 SWAP1 PUSH2 0xFF9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9EDDC895A7FCC0F3C43A5EC13C076918147735DC833EFD2B36BE61B49960AE28 DUP5 PUSH1 0x40 MLOAD PUSH2 0x55B SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x104F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x10BE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x64D JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x657 PUSH2 0xD11 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x669 PUSH2 0xCC1 JUMP JUMPDEST CALLER PUSH2 0x672 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x688 DUP2 PUSH2 0x289 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x104F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x827 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84B SWAP2 SWAP1 PUSH2 0x10BE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8EF124458F6FEAFFA36635FCAA512E69BB8539878544E2FAD3115DA59145B4FC DUP4 PUSH1 0x40 MLOAD PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x8DD PUSH2 0xD11 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8E7 PUSH2 0xCC1 JUMP JUMPDEST CALLER PUSH2 0x8F0 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x906 DUP2 PUSH2 0x289 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 LT ISZERO PUSH2 0xA08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA1A SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA70 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD4 SWAP3 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB26 SWAP2 SWAP1 PUSH2 0x10BE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xB5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x601CFD9096521C3AD4102493ABE73CD7278CE7B82D41F1D65E1C25C1FB561978 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xBB7 PUSH2 0xD11 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 SLOAD EQ ISZERO PUSH2 0xC2A JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xC46 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH2 0xC50 SWAP2 SWAP1 PUSH2 0xF3F JUMP JUMPDEST PUSH2 0xC5A SWAP2 SWAP1 PUSH2 0xF3F JUMP JUMPDEST PUSH2 0xC64 SWAP2 SWAP1 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xC71 SWAP2 SWAP1 PUSH2 0xFF9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xD07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFE SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD4B DUP3 PUSH2 0xD20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5B DUP2 PUSH2 0xD40 JUMP JUMPDEST DUP2 EQ PUSH2 0xD66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD78 DUP2 PUSH2 0xD52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD94 JUMPI PUSH2 0xD93 PUSH2 0xD1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDA2 DUP5 DUP3 DUP6 ADD PUSH2 0xD69 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDBE DUP2 PUSH2 0xDAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDD9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDE8 DUP2 PUSH2 0xDAB JUMP JUMPDEST DUP2 EQ PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE05 DUP2 PUSH2 0xDDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE21 JUMPI PUSH2 0xE20 PUSH2 0xD1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE2F DUP5 DUP3 DUP6 ADD PUSH2 0xDF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5D PUSH2 0xE58 PUSH2 0xE53 DUP5 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0xE38 JUMP JUMPDEST PUSH2 0xD20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6F DUP3 PUSH2 0xE42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE81 DUP3 PUSH2 0xE64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE91 DUP2 PUSH2 0xE76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEBB DUP2 PUSH2 0xD40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xED6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF16 DUP3 PUSH2 0xDAB JUMP JUMPDEST SWAP2 POP PUSH2 0xF21 DUP4 PUSH2 0xDAB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xF34 JUMPI PUSH2 0xF33 PUSH2 0xEDC JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4A DUP3 PUSH2 0xDAB JUMP JUMPDEST SWAP2 POP PUSH2 0xF55 DUP4 PUSH2 0xDAB JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF8E JUMPI PUSH2 0xF8D PUSH2 0xEDC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFD3 DUP3 PUSH2 0xDAB JUMP JUMPDEST SWAP2 POP PUSH2 0xFDE DUP4 PUSH2 0xDAB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFEE JUMPI PUSH2 0xFED PUSH2 0xF99 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1004 DUP3 PUSH2 0xDAB JUMP JUMPDEST SWAP2 POP PUSH2 0x100F DUP4 PUSH2 0xDAB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1044 JUMPI PUSH2 0x1043 PUSH2 0xEDC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1064 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0x1071 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0x107E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDB5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109B DUP2 PUSH2 0x1086 JUMP JUMPDEST DUP2 EQ PUSH2 0x10A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10B8 DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D4 JUMPI PUSH2 0x10D3 PUSH2 0xD1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10E2 DUP5 DUP3 DUP6 ADD PUSH2 0x10A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1100 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0x110D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDB5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115B PUSH1 0x1F DUP4 PUSH2 0x1114 JUMP JUMPDEST SWAP2 POP PUSH2 0x1166 DUP3 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x118A DUP2 PUSH2 0x114E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 LOG4 0x2B DUP13 SMOD DUP4 0xD7 0xDC PUSH30 0xEED15161A350551B15BAC8E44A5006738BBADC3C9A158964736F6C634300 ADDMOD MULMOD STOP CALLER ","sourceMap":"249:3963:2:-:0;;;983:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:0;1821:7;:22;;;;1076:15:2;1054:38;;;;;;;;;;1124:14;1103:36;;;;;;;;;;1160:10;1150:7;;:20;;;;;;;;;;;;;;;;;;983:195;;249:3963;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;249:3963:2:-;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@Claim_488":{"entryPoint":1633,"id":488,"parameterSlots":0,"returnSlots":0},"@RewardToken_147":{"entryPoint":3229,"id":147,"parameterSlots":0,"returnSlots":0},"@Stake_382":{"entryPoint":954,"id":382,"parameterSlots":1,"returnSlots":0},"@StakingToken_144":{"entryPoint":3032,"id":144,"parameterSlots":0,"returnSlots":0},"@Withdraw_438":{"entryPoint":2271,"id":438,"parameterSlots":1,"returnSlots":0},"@_nonReentrantAfter_52":{"entryPoint":3345,"id":52,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_44":{"entryPoint":3265,"id":44,"parameterSlots":0,"returnSlots":0},"@earned_330":{"entryPoint":649,"id":330,"parameterSlots":1,"returnSlots":1},"@rewardPerToken_286":{"entryPoint":3092,"id":286,"parameterSlots":0,"returnSlots":1},"@s_balances_162":{"entryPoint":3008,"id":162,"parameterSlots":0,"returnSlots":0},"@s_owner_149":{"entryPoint":3191,"id":149,"parameterSlots":0,"returnSlots":0},"@s_rewardPerTokenStored_158":{"entryPoint":1627,"id":158,"parameterSlots":0,"returnSlots":0},"@s_rewards_166":{"entryPoint":3068,"id":166,"parameterSlots":0,"returnSlots":0},"@s_totalSupply_156":{"entryPoint":3002,"id":156,"parameterSlots":0,"returnSlots":0},"@s_userRewardPerToken_170":{"entryPoint":930,"id":170,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":3433,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":4265,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3454,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":4286,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3595,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3762,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC20_$131_to_t_address_fromStack":{"entryPoint":3720,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":4430,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3509,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3777,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":4175,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":4331,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$131__to_t_address__fromStack_reversed":{"entryPoint":3735,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4465,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3524,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4372,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4089,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":4040,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3903,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3851,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3392,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4230,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3360,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3499,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$131_to_t_address":{"entryPoint":3702,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":3684,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":3650,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":3640,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3804,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":3993,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3355,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":4389,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3410,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":4242,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3551,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7563:3","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:3","statements":[{"nodeType":"YulAssignment","src":"57:19:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:3","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:3"},"nodeType":"YulFunctionCall","src":"67:9:3"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:3"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:3","type":""}],"src":"7:75:3"},{"body":{"nodeType":"YulBlock","src":"177:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:3"},"nodeType":"YulFunctionCall","src":"187:12:3"},"nodeType":"YulExpressionStatement","src":"187:12:3"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:3"},{"body":{"nodeType":"YulBlock","src":"300:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:3"},"nodeType":"YulFunctionCall","src":"310:12:3"},"nodeType":"YulExpressionStatement","src":"310:12:3"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:3"},{"body":{"nodeType":"YulBlock","src":"379:81:3","statements":[{"nodeType":"YulAssignment","src":"389:65:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:3"},"nodeType":"YulFunctionCall","src":"400:54:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:3"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:3","type":""}],"src":"334:126:3"},{"body":{"nodeType":"YulBlock","src":"511:51:3","statements":[{"nodeType":"YulAssignment","src":"521:35:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:3"},"nodeType":"YulFunctionCall","src":"532:24:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:3"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:3","type":""}],"src":"466:96:3"},{"body":{"nodeType":"YulBlock","src":"611:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:3"},"nodeType":"YulFunctionCall","src":"670:12:3"},"nodeType":"YulExpressionStatement","src":"670:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:3"},"nodeType":"YulFunctionCall","src":"641:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:3"},"nodeType":"YulFunctionCall","src":"631:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:3"},"nodeType":"YulFunctionCall","src":"624:43:3"},"nodeType":"YulIf","src":"621:63:3"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:3","type":""}],"src":"568:122:3"},{"body":{"nodeType":"YulBlock","src":"748:87:3","statements":[{"nodeType":"YulAssignment","src":"758:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:3"},"nodeType":"YulFunctionCall","src":"767:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:3"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:3"},"nodeType":"YulFunctionCall","src":"796:33:3"},"nodeType":"YulExpressionStatement","src":"796:33:3"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:3","type":""}],"src":"696:139:3"},{"body":{"nodeType":"YulBlock","src":"907:263:3","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:3"},"nodeType":"YulFunctionCall","src":"955:79:3"},"nodeType":"YulExpressionStatement","src":"955:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:3"},"nodeType":"YulFunctionCall","src":"924:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:3"},"nodeType":"YulFunctionCall","src":"920:32:3"},"nodeType":"YulIf","src":"917:119:3"},{"nodeType":"YulBlock","src":"1046:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:3"},"nodeType":"YulFunctionCall","src":"1121:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:3"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:3"},"nodeType":"YulFunctionCall","src":"1100:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:3"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:3","type":""}],"src":"841:329:3"},{"body":{"nodeType":"YulBlock","src":"1221:32:3","statements":[{"nodeType":"YulAssignment","src":"1231:16:3","value":{"name":"value","nodeType":"YulIdentifier","src":"1242:5:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1231:7:3"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1203:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1213:7:3","type":""}],"src":"1176:77:3"},{"body":{"nodeType":"YulBlock","src":"1324:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1341:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1364:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1346:17:3"},"nodeType":"YulFunctionCall","src":"1346:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:3"},"nodeType":"YulFunctionCall","src":"1334:37:3"},"nodeType":"YulExpressionStatement","src":"1334:37:3"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1312:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1319:3:3","type":""}],"src":"1259:118:3"},{"body":{"nodeType":"YulBlock","src":"1481:124:3","statements":[{"nodeType":"YulAssignment","src":"1491:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1503:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1514:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1499:3:3"},"nodeType":"YulFunctionCall","src":"1499:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1491:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1571:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1584:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1595:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1580:3:3"},"nodeType":"YulFunctionCall","src":"1580:17:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1527:43:3"},"nodeType":"YulFunctionCall","src":"1527:71:3"},"nodeType":"YulExpressionStatement","src":"1527:71:3"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1453:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1465:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1476:4:3","type":""}],"src":"1383:222:3"},{"body":{"nodeType":"YulBlock","src":"1654:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"1711:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1720:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1723:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1713:6:3"},"nodeType":"YulFunctionCall","src":"1713:12:3"},"nodeType":"YulExpressionStatement","src":"1713:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1677:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1702:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1684:17:3"},"nodeType":"YulFunctionCall","src":"1684:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1674:2:3"},"nodeType":"YulFunctionCall","src":"1674:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1667:6:3"},"nodeType":"YulFunctionCall","src":"1667:43:3"},"nodeType":"YulIf","src":"1664:63:3"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1647:5:3","type":""}],"src":"1611:122:3"},{"body":{"nodeType":"YulBlock","src":"1791:87:3","statements":[{"nodeType":"YulAssignment","src":"1801:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1823:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1810:12:3"},"nodeType":"YulFunctionCall","src":"1810:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1801:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1866:5:3"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1839:26:3"},"nodeType":"YulFunctionCall","src":"1839:33:3"},"nodeType":"YulExpressionStatement","src":"1839:33:3"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"1777:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1785:5:3","type":""}],"src":"1739:139:3"},{"body":{"nodeType":"YulBlock","src":"1950:263:3","statements":[{"body":{"nodeType":"YulBlock","src":"1996:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1998:77:3"},"nodeType":"YulFunctionCall","src":"1998:79:3"},"nodeType":"YulExpressionStatement","src":"1998:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1971:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1980:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1967:3:3"},"nodeType":"YulFunctionCall","src":"1967:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1992:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1963:3:3"},"nodeType":"YulFunctionCall","src":"1963:32:3"},"nodeType":"YulIf","src":"1960:119:3"},{"nodeType":"YulBlock","src":"2089:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2104:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"2118:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2108:6:3","type":""}]},{"nodeType":"YulAssignment","src":"2133:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2168:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"2179:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2164:3:3"},"nodeType":"YulFunctionCall","src":"2164:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2188:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2143:20:3"},"nodeType":"YulFunctionCall","src":"2143:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2133:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1920:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1931:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1943:6:3","type":""}],"src":"1884:329:3"},{"body":{"nodeType":"YulBlock","src":"2251:28:3","statements":[{"nodeType":"YulAssignment","src":"2261:12:3","value":{"name":"value","nodeType":"YulIdentifier","src":"2268:5:3"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2261:3:3"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2237:5:3","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2247:3:3","type":""}],"src":"2219:60:3"},{"body":{"nodeType":"YulBlock","src":"2345:82:3","statements":[{"nodeType":"YulAssignment","src":"2355:66:3","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2413:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2395:17:3"},"nodeType":"YulFunctionCall","src":"2395:24:3"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"2386:8:3"},"nodeType":"YulFunctionCall","src":"2386:34:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2368:17:3"},"nodeType":"YulFunctionCall","src":"2368:53:3"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2355:9:3"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2325:5:3","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2335:9:3","type":""}],"src":"2285:142:3"},{"body":{"nodeType":"YulBlock","src":"2493:66:3","statements":[{"nodeType":"YulAssignment","src":"2503:50:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2547:5:3"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"2516:30:3"},"nodeType":"YulFunctionCall","src":"2516:37:3"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2503:9:3"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2473:5:3","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2483:9:3","type":""}],"src":"2433:126:3"},{"body":{"nodeType":"YulBlock","src":"2639:66:3","statements":[{"nodeType":"YulAssignment","src":"2649:50:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2693:5:3"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"2662:30:3"},"nodeType":"YulFunctionCall","src":"2662:37:3"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2649:9:3"}]}]},"name":"convert_t_contract$_IERC20_$131_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2619:5:3","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2629:9:3","type":""}],"src":"2565:140:3"},{"body":{"nodeType":"YulBlock","src":"2790:80:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2807:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2857:5:3"}],"functionName":{"name":"convert_t_contract$_IERC20_$131_to_t_address","nodeType":"YulIdentifier","src":"2812:44:3"},"nodeType":"YulFunctionCall","src":"2812:51:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2800:6:3"},"nodeType":"YulFunctionCall","src":"2800:64:3"},"nodeType":"YulExpressionStatement","src":"2800:64:3"}]},"name":"abi_encode_t_contract$_IERC20_$131_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2778:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2785:3:3","type":""}],"src":"2711:159:3"},{"body":{"nodeType":"YulBlock","src":"2988:138:3","statements":[{"nodeType":"YulAssignment","src":"2998:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3010:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3021:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3006:3:3"},"nodeType":"YulFunctionCall","src":"3006:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2998:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3092:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3105:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3116:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3101:3:3"},"nodeType":"YulFunctionCall","src":"3101:17:3"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$131_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3034:57:3"},"nodeType":"YulFunctionCall","src":"3034:85:3"},"nodeType":"YulExpressionStatement","src":"3034:85:3"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$131__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2960:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2972:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2983:4:3","type":""}],"src":"2876:250:3"},{"body":{"nodeType":"YulBlock","src":"3197:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3214:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3237:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3219:17:3"},"nodeType":"YulFunctionCall","src":"3219:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3207:6:3"},"nodeType":"YulFunctionCall","src":"3207:37:3"},"nodeType":"YulExpressionStatement","src":"3207:37:3"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3185:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3192:3:3","type":""}],"src":"3132:118:3"},{"body":{"nodeType":"YulBlock","src":"3354:124:3","statements":[{"nodeType":"YulAssignment","src":"3364:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3376:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3387:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3372:3:3"},"nodeType":"YulFunctionCall","src":"3372:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3364:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3444:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3457:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3468:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3453:3:3"},"nodeType":"YulFunctionCall","src":"3453:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3400:43:3"},"nodeType":"YulFunctionCall","src":"3400:71:3"},"nodeType":"YulExpressionStatement","src":"3400:71:3"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3326:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3338:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3349:4:3","type":""}],"src":"3256:222:3"},{"body":{"nodeType":"YulBlock","src":"3512:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3529:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3532:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3522:6:3"},"nodeType":"YulFunctionCall","src":"3522:88:3"},"nodeType":"YulExpressionStatement","src":"3522:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3626:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3629:4:3","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3619:6:3"},"nodeType":"YulFunctionCall","src":"3619:15:3"},"nodeType":"YulExpressionStatement","src":"3619:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3650:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3653:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3643:6:3"},"nodeType":"YulFunctionCall","src":"3643:15:3"},"nodeType":"YulExpressionStatement","src":"3643:15:3"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3484:180:3"},{"body":{"nodeType":"YulBlock","src":"3715:146:3","statements":[{"nodeType":"YulAssignment","src":"3725:25:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3748:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3730:17:3"},"nodeType":"YulFunctionCall","src":"3730:20:3"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"3725:1:3"}]},{"nodeType":"YulAssignment","src":"3759:25:3","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3782:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3764:17:3"},"nodeType":"YulFunctionCall","src":"3764:20:3"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"3759:1:3"}]},{"body":{"nodeType":"YulBlock","src":"3806:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3808:16:3"},"nodeType":"YulFunctionCall","src":"3808:18:3"},"nodeType":"YulExpressionStatement","src":"3808:18:3"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3800:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"3803:1:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3797:2:3"},"nodeType":"YulFunctionCall","src":"3797:8:3"},"nodeType":"YulIf","src":"3794:34:3"},{"nodeType":"YulAssignment","src":"3838:17:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3850:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"3853:1:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3846:3:3"},"nodeType":"YulFunctionCall","src":"3846:9:3"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"3838:4:3"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3701:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"3704:1:3","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"3710:4:3","type":""}],"src":"3670:191:3"},{"body":{"nodeType":"YulBlock","src":"3915:300:3","statements":[{"nodeType":"YulAssignment","src":"3925:25:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3948:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3930:17:3"},"nodeType":"YulFunctionCall","src":"3930:20:3"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"3925:1:3"}]},{"nodeType":"YulAssignment","src":"3959:25:3","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3982:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3964:17:3"},"nodeType":"YulFunctionCall","src":"3964:20:3"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"3959:1:3"}]},{"body":{"nodeType":"YulBlock","src":"4157:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4159:16:3"},"nodeType":"YulFunctionCall","src":"4159:18:3"},"nodeType":"YulExpressionStatement","src":"4159:18:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4069:1:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4062:6:3"},"nodeType":"YulFunctionCall","src":"4062:9:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4055:6:3"},"nodeType":"YulFunctionCall","src":"4055:17:3"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4077:1:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4084:66:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"4152:1:3"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4080:3:3"},"nodeType":"YulFunctionCall","src":"4080:74:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4074:2:3"},"nodeType":"YulFunctionCall","src":"4074:81:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4051:3:3"},"nodeType":"YulFunctionCall","src":"4051:105:3"},"nodeType":"YulIf","src":"4048:131:3"},{"nodeType":"YulAssignment","src":"4189:20:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4204:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"4207:1:3"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4200:3:3"},"nodeType":"YulFunctionCall","src":"4200:9:3"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"4189:7:3"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3898:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"3901:1:3","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"3907:7:3","type":""}],"src":"3867:348:3"},{"body":{"nodeType":"YulBlock","src":"4249:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4266:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4269:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4259:6:3"},"nodeType":"YulFunctionCall","src":"4259:88:3"},"nodeType":"YulExpressionStatement","src":"4259:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4363:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4366:4:3","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4356:6:3"},"nodeType":"YulFunctionCall","src":"4356:15:3"},"nodeType":"YulExpressionStatement","src":"4356:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4387:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4390:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4380:6:3"},"nodeType":"YulFunctionCall","src":"4380:15:3"},"nodeType":"YulExpressionStatement","src":"4380:15:3"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"4221:180:3"},{"body":{"nodeType":"YulBlock","src":"4449:143:3","statements":[{"nodeType":"YulAssignment","src":"4459:25:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4482:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4464:17:3"},"nodeType":"YulFunctionCall","src":"4464:20:3"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"4459:1:3"}]},{"nodeType":"YulAssignment","src":"4493:25:3","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4516:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4498:17:3"},"nodeType":"YulFunctionCall","src":"4498:20:3"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"4493:1:3"}]},{"body":{"nodeType":"YulBlock","src":"4540:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"4542:16:3"},"nodeType":"YulFunctionCall","src":"4542:18:3"},"nodeType":"YulExpressionStatement","src":"4542:18:3"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4537:1:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4530:6:3"},"nodeType":"YulFunctionCall","src":"4530:9:3"},"nodeType":"YulIf","src":"4527:35:3"},{"nodeType":"YulAssignment","src":"4572:14:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4581:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"4584:1:3"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4577:3:3"},"nodeType":"YulFunctionCall","src":"4577:9:3"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"4572:1:3"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4438:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"4441:1:3","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"4447:1:3","type":""}],"src":"4407:185:3"},{"body":{"nodeType":"YulBlock","src":"4642:261:3","statements":[{"nodeType":"YulAssignment","src":"4652:25:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4675:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4657:17:3"},"nodeType":"YulFunctionCall","src":"4657:20:3"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"4652:1:3"}]},{"nodeType":"YulAssignment","src":"4686:25:3","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4709:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4691:17:3"},"nodeType":"YulFunctionCall","src":"4691:20:3"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"4686:1:3"}]},{"body":{"nodeType":"YulBlock","src":"4849:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4851:16:3"},"nodeType":"YulFunctionCall","src":"4851:18:3"},"nodeType":"YulExpressionStatement","src":"4851:18:3"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4770:1:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4777:66:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"4845:1:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4773:3:3"},"nodeType":"YulFunctionCall","src":"4773:74:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4767:2:3"},"nodeType":"YulFunctionCall","src":"4767:81:3"},"nodeType":"YulIf","src":"4764:107:3"},{"nodeType":"YulAssignment","src":"4881:16:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4892:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"4895:1:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4888:3:3"},"nodeType":"YulFunctionCall","src":"4888:9:3"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4881:3:3"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4629:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"4632:1:3","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4638:3:3","type":""}],"src":"4598:305:3"},{"body":{"nodeType":"YulBlock","src":"5063:288:3","statements":[{"nodeType":"YulAssignment","src":"5073:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5085:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5096:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5081:3:3"},"nodeType":"YulFunctionCall","src":"5081:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5073:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5153:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5166:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5177:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5162:3:3"},"nodeType":"YulFunctionCall","src":"5162:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5109:43:3"},"nodeType":"YulFunctionCall","src":"5109:71:3"},"nodeType":"YulExpressionStatement","src":"5109:71:3"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5234:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5247:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5258:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5243:3:3"},"nodeType":"YulFunctionCall","src":"5243:18:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5190:43:3"},"nodeType":"YulFunctionCall","src":"5190:72:3"},"nodeType":"YulExpressionStatement","src":"5190:72:3"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5316:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5329:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5340:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5325:3:3"},"nodeType":"YulFunctionCall","src":"5325:18:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5272:43:3"},"nodeType":"YulFunctionCall","src":"5272:72:3"},"nodeType":"YulExpressionStatement","src":"5272:72:3"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5019:9:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5031:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5039:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5047:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5058:4:3","type":""}],"src":"4909:442:3"},{"body":{"nodeType":"YulBlock","src":"5399:48:3","statements":[{"nodeType":"YulAssignment","src":"5409:32:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5434:5:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5427:6:3"},"nodeType":"YulFunctionCall","src":"5427:13:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5420:6:3"},"nodeType":"YulFunctionCall","src":"5420:21:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5409:7:3"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5381:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5391:7:3","type":""}],"src":"5357:90:3"},{"body":{"nodeType":"YulBlock","src":"5493:76:3","statements":[{"body":{"nodeType":"YulBlock","src":"5547:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5556:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5559:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5549:6:3"},"nodeType":"YulFunctionCall","src":"5549:12:3"},"nodeType":"YulExpressionStatement","src":"5549:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5516:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5538:5:3"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5523:14:3"},"nodeType":"YulFunctionCall","src":"5523:21:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5513:2:3"},"nodeType":"YulFunctionCall","src":"5513:32:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5506:6:3"},"nodeType":"YulFunctionCall","src":"5506:40:3"},"nodeType":"YulIf","src":"5503:60:3"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5486:5:3","type":""}],"src":"5453:116:3"},{"body":{"nodeType":"YulBlock","src":"5635:77:3","statements":[{"nodeType":"YulAssignment","src":"5645:22:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5660:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5654:5:3"},"nodeType":"YulFunctionCall","src":"5654:13:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5645:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5700:5:3"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"5676:23:3"},"nodeType":"YulFunctionCall","src":"5676:30:3"},"nodeType":"YulExpressionStatement","src":"5676:30:3"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5613:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"5621:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5629:5:3","type":""}],"src":"5575:137:3"},{"body":{"nodeType":"YulBlock","src":"5792:271:3","statements":[{"body":{"nodeType":"YulBlock","src":"5838:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5840:77:3"},"nodeType":"YulFunctionCall","src":"5840:79:3"},"nodeType":"YulExpressionStatement","src":"5840:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5813:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"5822:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5809:3:3"},"nodeType":"YulFunctionCall","src":"5809:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"5834:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5805:3:3"},"nodeType":"YulFunctionCall","src":"5805:32:3"},"nodeType":"YulIf","src":"5802:119:3"},{"nodeType":"YulBlock","src":"5931:125:3","statements":[{"nodeType":"YulVariableDeclaration","src":"5946:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"5960:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5950:6:3","type":""}]},{"nodeType":"YulAssignment","src":"5975:71:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6018:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"6029:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6014:3:3"},"nodeType":"YulFunctionCall","src":"6014:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6038:7:3"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"5985:28:3"},"nodeType":"YulFunctionCall","src":"5985:61:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5975:6:3"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5762:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5773:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5785:6:3","type":""}],"src":"5718:345:3"},{"body":{"nodeType":"YulBlock","src":"6195:206:3","statements":[{"nodeType":"YulAssignment","src":"6205:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6217:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6228:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6213:3:3"},"nodeType":"YulFunctionCall","src":"6213:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6205:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6285:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6298:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6309:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6294:3:3"},"nodeType":"YulFunctionCall","src":"6294:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6241:43:3"},"nodeType":"YulFunctionCall","src":"6241:71:3"},"nodeType":"YulExpressionStatement","src":"6241:71:3"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6366:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6379:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6390:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6375:3:3"},"nodeType":"YulFunctionCall","src":"6375:18:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6322:43:3"},"nodeType":"YulFunctionCall","src":"6322:72:3"},"nodeType":"YulExpressionStatement","src":"6322:72:3"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6159:9:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6171:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6179:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6190:4:3","type":""}],"src":"6069:332:3"},{"body":{"nodeType":"YulBlock","src":"6503:73:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6520:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"6525:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6513:6:3"},"nodeType":"YulFunctionCall","src":"6513:19:3"},"nodeType":"YulExpressionStatement","src":"6513:19:3"},{"nodeType":"YulAssignment","src":"6541:29:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6560:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"6565:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6556:3:3"},"nodeType":"YulFunctionCall","src":"6556:14:3"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6541:11:3"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6475:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"6480:6:3","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6491:11:3","type":""}],"src":"6407:169:3"},{"body":{"nodeType":"YulBlock","src":"6688:75:3","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6710:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"6718:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6706:3:3"},"nodeType":"YulFunctionCall","src":"6706:14:3"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"6722:33:3","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6699:6:3"},"nodeType":"YulFunctionCall","src":"6699:57:3"},"nodeType":"YulExpressionStatement","src":"6699:57:3"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6680:6:3","type":""}],"src":"6582:181:3"},{"body":{"nodeType":"YulBlock","src":"6915:220:3","statements":[{"nodeType":"YulAssignment","src":"6925:74:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6991:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"6996:2:3","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6932:58:3"},"nodeType":"YulFunctionCall","src":"6932:67:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6925:3:3"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7097:3:3"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"7008:88:3"},"nodeType":"YulFunctionCall","src":"7008:93:3"},"nodeType":"YulExpressionStatement","src":"7008:93:3"},{"nodeType":"YulAssignment","src":"7110:19:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"7126:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7117:3:3"},"nodeType":"YulFunctionCall","src":"7117:12:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7110:3:3"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6903:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6911:3:3","type":""}],"src":"6769:366:3"},{"body":{"nodeType":"YulBlock","src":"7312:248:3","statements":[{"nodeType":"YulAssignment","src":"7322:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7334:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7345:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7330:3:3"},"nodeType":"YulFunctionCall","src":"7330:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7322:4:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7369:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7380:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7365:3:3"},"nodeType":"YulFunctionCall","src":"7365:17:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7388:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"7394:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7384:3:3"},"nodeType":"YulFunctionCall","src":"7384:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7358:6:3"},"nodeType":"YulFunctionCall","src":"7358:47:3"},"nodeType":"YulExpressionStatement","src":"7358:47:3"},{"nodeType":"YulAssignment","src":"7414:139:3","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7548:4:3"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7422:124:3"},"nodeType":"YulFunctionCall","src":"7422:131:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7414:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7292:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7307:4:3","type":""}],"src":"7141:419:3"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$131_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$131_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$131_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$131__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$131_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"144":[{"length":32,"start":1383},{"length":32,"start":2683},{"length":32,"start":3034}],"147":[{"length":32,"start":1950},{"length":32,"start":3231}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ce5760003560e01c80636a74a0fc1161008c578063bea0815111610066578063bea08151146101ff578063cd3daf9d1461022f578063e39782401461024d578063f1e9f1e51461026b576100ce565b80636a74a0fc14610193578063ab32eb69146101b1578063be5af966146101e1576100ce565b80628cc262146100d357806321e82efa14610103578063227a473b14610133578063304ac91b1461014f5780633158952e1461016d5780635b6b431d14610177575b600080fd5b6100ed60048036038101906100e89190610d7e565b610289565b6040516100fa9190610dc4565b60405180910390f35b61011d60048036038101906101189190610d7e565b6103a2565b60405161012a9190610dc4565b60405180910390f35b61014d60048036038101906101489190610e0b565b6103ba565b005b61015761065b565b6040516101649190610dc4565b60405180910390f35b610175610661565b005b610191600480360381019061018c9190610e0b565b6108df565b005b61019b610bba565b6040516101a89190610dc4565b60405180910390f35b6101cb60048036038101906101c69190610d7e565b610bc0565b6040516101d89190610dc4565b60405180910390f35b6101e9610bd8565b6040516101f69190610e97565b60405180910390f35b61021960048036038101906102149190610d7e565b610bfc565b6040516102269190610dc4565b60405180910390f35b610237610c14565b6040516102449190610dc4565b60405180910390f35b610255610c77565b6040516102629190610ec1565b60405180910390f35b610273610c9d565b6040516102809190610e97565b60405180910390f35b600080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006102d8610c14565b90506000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080670de0b6b3a764000083856103789190610f0b565b866103839190610f3f565b61038d9190610fc8565b6103979190610ff9565b945050505050919050565b60076020528060005260406000206000915090505481565b336103c3610c14565b600481905550426002819055506103d981610289565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061046a610cc1565b8160008114156104a6576040517ff45911f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600360008282546104b89190610ff9565b9250508190555082600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461050e9190610ff9565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9eddc895a7fcc0f3c43a5ec13c076918147735dc833efd2b36be61b49960ae288460405161055b9190610dc4565b60405180910390a260007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016105c29392919061104f565b602060405180830381600087803b1580156105dc57600080fd5b505af11580156105f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061491906110be565b90508061064d576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050610657610d11565b5050565b60045481565b610669610cc1565b33610672610c14565b6004819055504260028190555061068881610289565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3033856040518463ffffffff1660e01b81526004016107f99392919061104f565b602060405180830381600087803b15801561081357600080fd5b505af1158015610827573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084b91906110be565b905080610884576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8ef124458f6feaffa36635fcaa512e69bb8539878544e2fad3115da59145b4fc836040516108ca9190610dc4565b60405180910390a25050506108dd610d11565b565b6108e7610cc1565b336108f0610c14565b6004819055504260028190555061090681610289565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821015610a08576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160036000828254610a1a9190610f0b565b9250508190555081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a709190610f0b565b9250508190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610ad49291906110eb565b602060405180830381600087803b158015610aee57600080fd5b505af1158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2691906110be565b905080610b5f576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f601cfd9096521c3ad4102493abe73cd7278ce7b82d41f1d65e1c25c1fb56197884604051610ba59190610dc4565b60405180910390a25050610bb7610d11565b50565b60035481565b60056020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60066020528060005260406000206000915090505481565b6000806003541415610c2a576004549050610c74565b600354670de0b6b3a7640000606460025442610c469190610f0b565b610c509190610f3f565b610c5a9190610f3f565b610c649190610fc8565b600454610c719190610ff9565b90505b90565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60026000541415610d07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfe90611171565b60405180910390fd5b6002600081905550565b6001600081905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d4b82610d20565b9050919050565b610d5b81610d40565b8114610d6657600080fd5b50565b600081359050610d7881610d52565b92915050565b600060208284031215610d9457610d93610d1b565b5b6000610da284828501610d69565b91505092915050565b6000819050919050565b610dbe81610dab565b82525050565b6000602082019050610dd96000830184610db5565b92915050565b610de881610dab565b8114610df357600080fd5b50565b600081359050610e0581610ddf565b92915050565b600060208284031215610e2157610e20610d1b565b5b6000610e2f84828501610df6565b91505092915050565b6000819050919050565b6000610e5d610e58610e5384610d20565b610e38565b610d20565b9050919050565b6000610e6f82610e42565b9050919050565b6000610e8182610e64565b9050919050565b610e9181610e76565b82525050565b6000602082019050610eac6000830184610e88565b92915050565b610ebb81610d40565b82525050565b6000602082019050610ed66000830184610eb2565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f1682610dab565b9150610f2183610dab565b925082821015610f3457610f33610edc565b5b828203905092915050565b6000610f4a82610dab565b9150610f5583610dab565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f8e57610f8d610edc565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fd382610dab565b9150610fde83610dab565b925082610fee57610fed610f99565b5b828204905092915050565b600061100482610dab565b915061100f83610dab565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561104457611043610edc565b5b828201905092915050565b60006060820190506110646000830186610eb2565b6110716020830185610eb2565b61107e6040830184610db5565b949350505050565b60008115159050919050565b61109b81611086565b81146110a657600080fd5b50565b6000815190506110b881611092565b92915050565b6000602082840312156110d4576110d3610d1b565b5b60006110e2848285016110a9565b91505092915050565b60006040820190506111006000830185610eb2565b61110d6020830184610db5565b9392505050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061115b601f83611114565b915061116682611125565b602082019050919050565b6000602082019050818103600083015261118a8161114e565b905091905056fea264697066735822122086a42b8c0783d7dc7deed15161a350551b15bac8e44a5006738bbadc3c9a158964736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A74A0FC GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBEA08151 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBEA08151 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xE3978240 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF1E9F1E5 EQ PUSH2 0x26B JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x6A74A0FC EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xAB32EB69 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xBE5AF966 EQ PUSH2 0x1E1 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x21E82EFA EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x227A473B EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x304AC91B EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x3158952E EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x5B6B431D EQ PUSH2 0x177 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x157 PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x661 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x2D8 PUSH2 0xC14 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 DUP6 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST DUP7 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0xF3F JUMP JUMPDEST PUSH2 0x38D SWAP2 SWAP1 PUSH2 0xFC8 JUMP JUMPDEST PUSH2 0x397 SWAP2 SWAP1 PUSH2 0xFF9 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0x3C3 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x3D9 DUP2 PUSH2 0x289 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x46A PUSH2 0xCC1 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF45911F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0xFF9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x50E SWAP2 SWAP1 PUSH2 0xFF9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9EDDC895A7FCC0F3C43A5EC13C076918147735DC833EFD2B36BE61B49960AE28 DUP5 PUSH1 0x40 MLOAD PUSH2 0x55B SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x104F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x10BE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x64D JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x657 PUSH2 0xD11 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x669 PUSH2 0xCC1 JUMP JUMPDEST CALLER PUSH2 0x672 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x688 DUP2 PUSH2 0x289 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x104F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x827 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84B SWAP2 SWAP1 PUSH2 0x10BE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8EF124458F6FEAFFA36635FCAA512E69BB8539878544E2FAD3115DA59145B4FC DUP4 PUSH1 0x40 MLOAD PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x8DD PUSH2 0xD11 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8E7 PUSH2 0xCC1 JUMP JUMPDEST CALLER PUSH2 0x8F0 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x906 DUP2 PUSH2 0x289 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 LT ISZERO PUSH2 0xA08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA1A SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA70 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD4 SWAP3 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB26 SWAP2 SWAP1 PUSH2 0x10BE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xB5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x601CFD9096521C3AD4102493ABE73CD7278CE7B82D41F1D65E1C25C1FB561978 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xBB7 PUSH2 0xD11 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 SLOAD EQ ISZERO PUSH2 0xC2A JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xC46 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH2 0xC50 SWAP2 SWAP1 PUSH2 0xF3F JUMP JUMPDEST PUSH2 0xC5A SWAP2 SWAP1 PUSH2 0xF3F JUMP JUMPDEST PUSH2 0xC64 SWAP2 SWAP1 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xC71 SWAP2 SWAP1 PUSH2 0xFF9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xD07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFE SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD4B DUP3 PUSH2 0xD20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5B DUP2 PUSH2 0xD40 JUMP JUMPDEST DUP2 EQ PUSH2 0xD66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD78 DUP2 PUSH2 0xD52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD94 JUMPI PUSH2 0xD93 PUSH2 0xD1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDA2 DUP5 DUP3 DUP6 ADD PUSH2 0xD69 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDBE DUP2 PUSH2 0xDAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDD9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDE8 DUP2 PUSH2 0xDAB JUMP JUMPDEST DUP2 EQ PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE05 DUP2 PUSH2 0xDDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE21 JUMPI PUSH2 0xE20 PUSH2 0xD1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE2F DUP5 DUP3 DUP6 ADD PUSH2 0xDF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5D PUSH2 0xE58 PUSH2 0xE53 DUP5 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0xE38 JUMP JUMPDEST PUSH2 0xD20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6F DUP3 PUSH2 0xE42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE81 DUP3 PUSH2 0xE64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE91 DUP2 PUSH2 0xE76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEBB DUP2 PUSH2 0xD40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xED6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF16 DUP3 PUSH2 0xDAB JUMP JUMPDEST SWAP2 POP PUSH2 0xF21 DUP4 PUSH2 0xDAB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xF34 JUMPI PUSH2 0xF33 PUSH2 0xEDC JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4A DUP3 PUSH2 0xDAB JUMP JUMPDEST SWAP2 POP PUSH2 0xF55 DUP4 PUSH2 0xDAB JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF8E JUMPI PUSH2 0xF8D PUSH2 0xEDC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFD3 DUP3 PUSH2 0xDAB JUMP JUMPDEST SWAP2 POP PUSH2 0xFDE DUP4 PUSH2 0xDAB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFEE JUMPI PUSH2 0xFED PUSH2 0xF99 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1004 DUP3 PUSH2 0xDAB JUMP JUMPDEST SWAP2 POP PUSH2 0x100F DUP4 PUSH2 0xDAB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1044 JUMPI PUSH2 0x1043 PUSH2 0xEDC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1064 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0x1071 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0x107E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDB5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109B DUP2 PUSH2 0x1086 JUMP JUMPDEST DUP2 EQ PUSH2 0x10A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10B8 DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D4 JUMPI PUSH2 0x10D3 PUSH2 0xD1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10E2 DUP5 DUP3 DUP6 ADD PUSH2 0x10A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1100 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0x110D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDB5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115B PUSH1 0x1F DUP4 PUSH2 0x1114 JUMP JUMPDEST SWAP2 POP PUSH2 0x1166 DUP3 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x118A DUP2 PUSH2 0x114E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 LOG4 0x2B DUP13 SMOD DUP4 0xD7 0xDC PUSH30 0xEED15161A350551B15BAC8E44A5006738BBADC3C9A158964736F6C634300 ADDMOD MULMOD STOP CALLER ","sourceMap":"249:3963:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1942:386;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;706:56;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2562:417;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;557:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3826:383;;;:::i;:::-;;3199:465;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;522:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;601:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;320:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;654:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1661:273;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;405:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;363:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1942:386;1996:7;2015:19;2037:10;:19;2048:7;2037:19;;;;;;;;;;;;;;;;2015:41;;2067:19;2089:16;:14;:16::i;:::-;2067:38;;2116:30;2149:20;:29;2170:7;2149:29;;;;;;;;;;;;;;;;2116:62;;2189:15;2208:9;:18;2218:7;2208:18;;;;;;;;;;;;;;;;2189:37;;2311:7;2303:4;2277:22;2263:11;:36;;;;:::i;:::-;2248:11;:52;;;;:::i;:::-;2247:60;;;;:::i;:::-;2246:72;;;;:::i;:::-;2239:79;;;;;;1942:386;;;:::o;706:56::-;;;;;;;;;;;;;;;;;:::o;2562:417::-;2616:10;1284:16;:14;:16::i;:::-;1259:22;:41;;;;1329:15;1311;:33;;;;1376:15;1383:7;1376:6;:15::i;:::-;1355:9;:18;1365:7;1355:18;;;;;;;;;;;;;;;:36;;;;1434:22;;1402:20;:29;1423:7;1402:29;;;;;;;;;;;;;;;:54;;;;2261:21:0::1;:19;:21::i;:::-;2654:7:2::2;1551:1;1540:7;:12;1536:73;;;1578:19;;;;;;;;;;;;;;1536:73;2699:7:::3;2682:13;;:24;;;;;;;:::i;:::-;;;;;;;;2743:7;2717:10;:22;2728:10;2717:22;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;2788:10;2766:33;;;2779:7;2766:33;;;;;;:::i;:::-;;;;;;;;2810:12;2825;:25;;;2851:10;2871:4;2878:7;2825:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2810:76;;2911:7;2907:63;;2941:17;;;;;;;;;;;;;;2907:63;2662:317;2292:1:0::2;2303:20:::1;:18;:20::i;:::-;2562:417:2::0;;:::o;557:37::-;;;;:::o;3826:383::-;2261:21:0;:19;:21::i;:::-;3878:10:2::1;1284:16;:14;:16::i;:::-;1259:22;:41;;;;1329:15;1311;:33;;;;1376:15;1383:7;1376:6;:15::i;:::-;1355:9;:18;1365:7;1355:18;;;;;;;;;;;;;;;:36;;;;1434:22;;1402:20;:29;1423:7;1402:29;;;;;;;;;;;;;;;:54;;;;3901:14:::2;3918:9;:21;3928:10;3918:21;;;;;;;;;;;;;;;;3901:38;;3974:1;3950:9;:21;3960:10;3950:21;;;;;;;;;;;;;;;:25;;;;3986:12;4001:11;:24;;;4034:4;4041:10;4053:6;4001:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3986:74;;4085:7;4081:63;;4115:17;;;;;;;;;;;;;;4081:63;4180:10;4161:30;;;4172:6;4161:30;;;;;;:::i;:::-;;;;;;;;3890:319;;2292:1:0::1;2303:20:::0;:18;:20::i;:::-;3826:383:2:o;3199:465::-;2261:21:0;:19;:21::i;:::-;3266:10:2::1;1284:16;:14;:16::i;:::-;1259:22;:41;;;;1329:15;1311;:33;;;;1376:15;1383:7;1376:6;:15::i;:::-;1355:9;:18;1365:7;1355:18;;;;;;;;;;;;;;;:36;;;;1434:22;;1402:20;:29;1423:7;1402:29;;;;;;;;;;;;;;;:54;;;;3301:10:::2;:22;3312:10;3301:22;;;;;;;;;;;;;;;;3291:7;:32;3288:87;;;3346:17;;;;;;;;;;;;;;3288:87;3402:7;3385:13;;:24;;;;;;;:::i;:::-;;;;;;;;3446:7;3420:10;:22;3431:10;3420:22;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;3464:12;3479;:21;;;3501:10;3513:7;3479:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3464:57;;3546:7;3542:63;;3576:17;;;;;;;;;;;;;;3542:63;3645:10;3622:34;;;3636:7;3622:34;;;;;;:::i;:::-;;;;;;;;3277:387;2292:1:0::1;2303:20:::0;:18;:20::i;:::-;3199:465:2;:::o;522:28::-;;;;:::o;601:46::-;;;;;;;;;;;;;;;;;:::o;320:36::-;;;:::o;654:45::-;;;;;;;;;;;;;;;;;:::o;1661:273::-;1708:7;1747:1;1730:13;;:18;1727:78;;;1771:22;;1764:29;;;;1727:78;1912:13;;1903:4;474:3;1869:15;;1851;:33;;;;:::i;:::-;1849:51;;;;:::i;:::-;:58;;;;:::i;:::-;1848:77;;;;:::i;:::-;1822:22;;:104;;;;:::i;:::-;1815:111;;1661:273;;:::o;405:22::-;;;;;;;;;;;;;:::o;363:35::-;;;:::o;2336:287:0:-;1759:1;2468:7;;:19;;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:60::-;2247:3;2268:5;2261:12;;2219:60;;;:::o;2285:142::-;2335:9;2368:53;2386:34;2395:24;2413:5;2395:24;:::i;:::-;2386:34;:::i;:::-;2368:53;:::i;:::-;2355:66;;2285:142;;;:::o;2433:126::-;2483:9;2516:37;2547:5;2516:37;:::i;:::-;2503:50;;2433:126;;;:::o;2565:140::-;2629:9;2662:37;2693:5;2662:37;:::i;:::-;2649:50;;2565:140;;;:::o;2711:159::-;2812:51;2857:5;2812:51;:::i;:::-;2807:3;2800:64;2711:159;;:::o;2876:250::-;2983:4;3021:2;3010:9;3006:18;2998:26;;3034:85;3116:1;3105:9;3101:17;3092:6;3034:85;:::i;:::-;2876:250;;;;:::o;3132:118::-;3219:24;3237:5;3219:24;:::i;:::-;3214:3;3207:37;3132:118;;:::o;3256:222::-;3349:4;3387:2;3376:9;3372:18;3364:26;;3400:71;3468:1;3457:9;3453:17;3444:6;3400:71;:::i;:::-;3256:222;;;;:::o;3484:180::-;3532:77;3529:1;3522:88;3629:4;3626:1;3619:15;3653:4;3650:1;3643:15;3670:191;3710:4;3730:20;3748:1;3730:20;:::i;:::-;3725:25;;3764:20;3782:1;3764:20;:::i;:::-;3759:25;;3803:1;3800;3797:8;3794:34;;;3808:18;;:::i;:::-;3794:34;3853:1;3850;3846:9;3838:17;;3670:191;;;;:::o;3867:348::-;3907:7;3930:20;3948:1;3930:20;:::i;:::-;3925:25;;3964:20;3982:1;3964:20;:::i;:::-;3959:25;;4152:1;4084:66;4080:74;4077:1;4074:81;4069:1;4062:9;4055:17;4051:105;4048:131;;;4159:18;;:::i;:::-;4048:131;4207:1;4204;4200:9;4189:20;;3867:348;;;;:::o;4221:180::-;4269:77;4266:1;4259:88;4366:4;4363:1;4356:15;4390:4;4387:1;4380:15;4407:185;4447:1;4464:20;4482:1;4464:20;:::i;:::-;4459:25;;4498:20;4516:1;4498:20;:::i;:::-;4493:25;;4537:1;4527:35;;4542:18;;:::i;:::-;4527:35;4584:1;4581;4577:9;4572:14;;4407:185;;;;:::o;4598:305::-;4638:3;4657:20;4675:1;4657:20;:::i;:::-;4652:25;;4691:20;4709:1;4691:20;:::i;:::-;4686:25;;4845:1;4777:66;4773:74;4770:1;4767:81;4764:107;;;4851:18;;:::i;:::-;4764:107;4895:1;4892;4888:9;4881:16;;4598:305;;;;:::o;4909:442::-;5058:4;5096:2;5085:9;5081:18;5073:26;;5109:71;5177:1;5166:9;5162:17;5153:6;5109:71;:::i;:::-;5190:72;5258:2;5247:9;5243:18;5234:6;5190:72;:::i;:::-;5272;5340:2;5329:9;5325:18;5316:6;5272:72;:::i;:::-;4909:442;;;;;;:::o;5357:90::-;5391:7;5434:5;5427:13;5420:21;5409:32;;5357:90;;;:::o;5453:116::-;5523:21;5538:5;5523:21;:::i;:::-;5516:5;5513:32;5503:60;;5559:1;5556;5549:12;5503:60;5453:116;:::o;5575:137::-;5629:5;5660:6;5654:13;5645:22;;5676:30;5700:5;5676:30;:::i;:::-;5575:137;;;;:::o;5718:345::-;5785:6;5834:2;5822:9;5813:7;5809:23;5805:32;5802:119;;;5840:79;;:::i;:::-;5802:119;5960:1;5985:61;6038:7;6029:6;6018:9;6014:22;5985:61;:::i;:::-;5975:71;;5931:125;5718:345;;;;:::o;6069:332::-;6190:4;6228:2;6217:9;6213:18;6205:26;;6241:71;6309:1;6298:9;6294:17;6285:6;6241:71;:::i;:::-;6322:72;6390:2;6379:9;6375:18;6366:6;6322:72;:::i;:::-;6069:332;;;;;:::o;6407:169::-;6491:11;6525:6;6520:3;6513:19;6565:4;6560:3;6556:14;6541:29;;6407:169;;;;:::o;6582:181::-;6722:33;6718:1;6710:6;6706:14;6699:57;6582:181;:::o;6769:366::-;6911:3;6932:67;6996:2;6991:3;6932:67;:::i;:::-;6925:74;;7008:93;7097:3;7008:93;:::i;:::-;7126:2;7121:3;7117:12;7110:19;;6769:366;;;:::o;7141:419::-;7307:4;7345:2;7334:9;7330:18;7322:26;;7394:9;7388:4;7384:20;7380:1;7369:9;7365:17;7358:47;7422:131;7548:4;7422:131;:::i;:::-;7414:139;;7141:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"910200","executionCost":"infinite","totalCost":"infinite"},"external":{"Claim()":"infinite","RewardToken()":"infinite","Stake(uint256)":"infinite","StakingToken()":"infinite","Withdraw(uint256)":"infinite","earned(address)":"infinite","rewardPerToken()":"infinite","s_balances(address)":"2859","s_owner()":"2580","s_rewardPerTokenStored()":"2496","s_rewards(address)":"2836","s_totalSupply()":"2452","s_userRewardPerToken(address)":"2837"}},"methodIdentifiers":{"Claim()":"3158952e","RewardToken()":"f1e9f1e5","Stake(uint256)":"227a473b","StakingToken()":"be5af966","Withdraw(uint256)":"5b6b431d","earned(address)":"008cc262","rewardPerToken()":"cd3daf9d","s_balances(address)":"ab32eb69","s_owner()":"e3978240","s_rewardPerTokenStored()":"304ac91b","s_rewards(address)":"bea08151","s_totalSupply()":"6a74a0fc","s_userRewardPerToken(address)":"21e82efa"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardaddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NeedsMoreThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Transfer_Failed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ClaimEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"StakingEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"WithdrawEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_userRewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/Staking.sol\":{\"content\":\"// //SPDX-License-Identifier: UNLICENSED\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\nerror Transfer_Failed();\\r\\nerror NeedsMoreThanZero();\\r\\n\\r\\ncontract Staking is ReentrancyGuard{\\r\\n    // @dev State Variables\\r\\n    IERC20 immutable public StakingToken;\\r\\n    IERC20 immutable public RewardToken;\\r\\n    address public s_owner;\\r\\n    uint256 private constant s_rewardRate = 100;\\r\\n    uint256 private lastUpdatedtime;\\r\\n    uint256 public s_totalSupply;\\r\\n    uint256 public s_rewardPerTokenStored;\\r\\n    mapping (address => uint256) public s_balances;\\r\\n    mapping (address => uint256) public s_rewards;\\r\\n    mapping (address => uint256) public s_userRewardPerToken;\\r\\n\\r\\n    // @dev Events\\r\\n    event StakingEvent(uint256 _amount, address indexed user);\\r\\n    event WithdrawEvent(uint256 _amount, address indexed user);\\r\\n    event ClaimEvent(uint256 amount, address indexed user);\\r\\n\\r\\n    constructor(address _stakingaddress, address _rewardaddress){\\r\\n        StakingToken = IERC20(_stakingaddress);\\r\\n        RewardToken = IERC20(_rewardaddress);\\r\\n        s_owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    //  @dev modifier\\r\\n    modifier UpdateReward(address account) {\\r\\n        s_rewardPerTokenStored = rewardPerToken();\\r\\n        lastUpdatedtime = block.timestamp;\\r\\n        s_rewards[account] = earned(account);\\r\\n        s_userRewardPerToken[account] = s_rewardPerTokenStored;\\r\\n        _;\\r\\n    }\\r\\n\\r\\n      modifier moreThanZero(uint256 _amount) {\\r\\n        if (_amount == 0) {\\r\\n\\r\\n            revert NeedsMoreThanZero();\\r\\n        }\\r\\n        _;\\r\\n      }\\r\\n\\r\\n    // @dev Functions\\r\\n    function rewardPerToken() public view returns (uint256){\\r\\n        if(s_totalSupply == 0){\\r\\n            return s_rewardPerTokenStored;\\r\\n        }\\r\\n        return s_rewardPerTokenStored + ((( block.timestamp - lastUpdatedtime) * s_rewardRate * 1e18 ) / s_totalSupply);\\r\\n    }\\r\\n\\r\\n    function earned(address account) public view returns (uint256){\\r\\n        uint256 userBalance = s_balances[account];\\r\\n        uint256 rewardToken = rewardPerToken();\\r\\n        uint256 userRewardPerTokenPaid = s_userRewardPerToken[account];\\r\\n        uint256 rewards =  s_rewards[account];\\r\\n\\r\\n        return ((userBalance * (rewardToken - userRewardPerTokenPaid))/ 1e18) + rewards;\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n    // @dev Stake Function\\r\\n    // Function shoud be able to add to total supply\\r\\n    // Add to the user balance\\r\\n    // transfer to the contract\\r\\n    // Emit the amount staked and the address\\r\\n//  UpdateReward(msg.sender)\\r\\n    function Stake(uint256 _amount) external UpdateReward(msg.sender) nonReentrant moreThanZero(_amount){\\r\\n       \\r\\n        s_totalSupply += _amount;\\r\\n        s_balances[msg.sender] += _amount;\\r\\n        emit StakingEvent(_amount, msg.sender);\\r\\n        bool success = StakingToken.transferFrom(msg.sender, address(this), _amount);\\r\\n        \\r\\n        if(!success){\\r\\n            revert Transfer_Failed();\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    // @dev Withdraw Function\\r\\n    // Function should be able to minus from the total supply\\r\\n    // Minus from the user balance\\r\\n    // transfer to the user\\r\\n    // Emit the amount withdrawed and the address\\r\\n\\r\\n    function Withdraw(uint _amount) external nonReentrant UpdateReward(msg.sender){\\r\\n        if(_amount < s_balances[msg.sender]){\\r\\n            revert Transfer_Failed();\\r\\n        }\\r\\n        s_totalSupply -= _amount;\\r\\n        s_balances[msg.sender] -= _amount;\\r\\n        bool success = StakingToken.transfer(msg.sender, _amount);\\r\\n        \\r\\n        if(!success){\\r\\n            revert Transfer_Failed();\\r\\n        }\\r\\n\\r\\n        emit WithdrawEvent(_amount, msg.sender);\\r\\n    }\\r\\n\\r\\n\\r\\n    // @dev Claim Function\\r\\n    // user reward will go to zero\\r\\n    // transfer the reward to the user\\r\\n    // Emit the amount token and the address\\r\\n\\r\\n    function Claim() external nonReentrant UpdateReward(msg.sender) {\\r\\n        uint256 amount = s_rewards[msg.sender];\\r\\n        s_rewards[msg.sender] = 0;\\r\\n        bool success = RewardToken.transferFrom(address(this), msg.sender, amount);\\r\\n        \\r\\n        if(!success){\\r\\n            revert Transfer_Failed();\\r\\n        }\\r\\n\\r\\n        emit ClaimEvent(amount, msg.sender);\\r\\n        \\r\\n    }\\r\\n}\",\"keccak256\":\"0x4a5412e3a1210b8262162da3492cd1bb9ce59485501b9f8ad0bee0df5cf04a83\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":10,"contract":"contracts/Staking.sol:Staking","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":149,"contract":"contracts/Staking.sol:Staking","label":"s_owner","offset":0,"slot":"1","type":"t_address"},{"astId":154,"contract":"contracts/Staking.sol:Staking","label":"lastUpdatedtime","offset":0,"slot":"2","type":"t_uint256"},{"astId":156,"contract":"contracts/Staking.sol:Staking","label":"s_totalSupply","offset":0,"slot":"3","type":"t_uint256"},{"astId":158,"contract":"contracts/Staking.sol:Staking","label":"s_rewardPerTokenStored","offset":0,"slot":"4","type":"t_uint256"},{"astId":162,"contract":"contracts/Staking.sol:Staking","label":"s_balances","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":166,"contract":"contracts/Staking.sol:Staking","label":"s_rewards","offset":0,"slot":"6","type":"t_mapping(t_address,t_uint256)"},{"astId":170,"contract":"contracts/Staking.sol:Staking","label":"s_userRewardPerToken","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}